/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package chatter;

/**
 *
 * @author maggiecelentano
 */
import java.awt.Button;
import java.io.*;

import java.net.*;
import java.util.Scanner;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

public class ServerThread extends Thread
{
   //the Server that spawned us
   private Server server;
   //the scoket connected to our client
   private Socket socket;
   private String username;



    // Constructor.

   public ServerThread(Server server, Socket socket)
   {

      // Save the parameters
      Scanner kb = new Scanner(System.in);
      this.server = server;

      this.socket = socket;

      this.username = "UNAVAILABLE";

      // Start up the thread
      start();
   }

   public void run()
   {
      try
      {

         // Create a DataInputStream for communication; the client

         // is using a DataOutputStream to write to us

         DataInputStream din = new DataInputStream(socket.getInputStream());


         // Over and over, forever ...
         int counter = 0;
         while (true)
         {

            // ... read the next message ...

            String message = din.readUTF();

            if(counter == 0)
            {
                //server.addUsername(message,socket.getPort());
                this.username = message;
                counter++;
            }
            else
            {
                // ... tell the world ...
                System.out.println("Sending "+message);
                // ... and have the server send it to all clients
                server.sendToAll(username + ":" + message, socket.getPort());
            }

          }

      }
      catch(EOFException ie)
      {

         System.out.println("noooo!");
      }
      catch(IOException ie)
      {

        // This does; tell the world!

        ie.printStackTrace();

      }
      finally
      {

       // The connection is closed for one reason or another,

       // so have the server dealing with it

       server.removeConnection(socket);
      }
    }//end run method

   public String getUsername()
   {
       return this.username;
   }
}//end ServerThread class














